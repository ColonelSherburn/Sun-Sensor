function env = load_env(dyn)

tmp_dcmIMU_B = [0, 0, -1; 1, 0, 0; 0, -1, 0];
tmp_dcmMAG_B = [1, 0, 0; 0, 1, 0; 0, 0, 1];
%tmp_dcmSS_B = [1, 0, 0; 0, 1, 0; 0, 0, 1];
tmp_dcmSS_B = [[1 0 0; 0 1 0; 0 0 1]'; [1 0 0; 0 -1 0; 0 0 -1]'];
% tmp_qSTRK_B = [0; 0.766044443118978; 0.642787609686539; 0];
tmp_qSTRK_B = [0;0.7071;0;0.7071];
%tmp_qSTRK_B = [0; 0.0; 0.0; 1];

% Sun sensors
% Sun sensor diode central vectors
% vectors currently based on estimated boresights from drawing
% XYZ rotation sequences (degrees): 
% Front module-
% diode 1 - [-25.5, 0, 0]
% diode 2 - [0, 25.5, 0]
% diode 3 - [25.5, 0, 0]
% diode 4 - [0, -25.5, 0]
% Back module-
% diode 1 - [205.5, 0, 0]
% diode 2 - [180, 25.5, 0]
% diode 3 - [154.5, 0, 0]
% diode 4 - [180, -25.5, 0]
centralVec = [0.0; 0.0; 1.0];
diodeAng = 25.0*pi/180;
singleDiodeAng = 35.0*pi/180; 
twoDiodeAng = 20.0*pi/180;
dcmB_SS = [[1 0 0; 0 1 0; 0 0 1]; angle2dcm(3.0*pi/4.0,0,0,'XYZ')'; angle2dcm(-3.0*pi/4.0,0,0,'XYZ')'];  %Body to sun sensor DCM 
% Diode boresight vectors
% diodeBoresight = [angle2dcm(-diodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(0, diodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(diodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(0, -diodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-(pi+diodeAng), 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi, diodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi + diodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi, -diodeAng, 0, 'XYZ')'*centralVec];
diodeBoresight = zeros(3,4*3);
for i = 1:3
    diodeStart = (i-1)*4 + 1;
    dcmStart = (i-1)*3 + 1;
    diodeBoresight(:,diodeStart:diodeStart+3) = [angle2dcm(-diodeAng, 0, 0, 'XYZ')'*[0.0; 0.0; 1.0], ...
        angle2dcm(0, diodeAng, 0, 'XYZ')'*centralVec, ...
        angle2dcm(diodeAng, 0, 0, 'XYZ')'*centralVec, ...
        angle2dcm(0, -diodeAng, 0, 'XYZ')'*centralVec];
    diodeBoresight(:,diodeStart:diodeStart+3) = dcmB_SS(dcmStart:dcmStart+2,:)'*diodeBoresight(:,diodeStart:diodeStart+3);
end  


% Single diode sun vector
% tmp_ssCent1Vec = [angle2dcm(-singleDiodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(0, singleDiodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(singleDiodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(0, -singleDiodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-(pi+singleDiodeAng), 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi, singleDiodeAng, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi + singleDiodeAng, 0, 0, 'XYZ')'*centralVec, ...
%                     angle2dcm(-pi, -singleDiodeAng, 0, 'XYZ')'*centralVec];

tmp_ssCent1Vec = zeros(3,4*3);
for i = 1:3
    diodeStart = (i-1)*4 + 1;
    dcmStart = (i-1)*3 + 1;
    tmp_ssCent1Vec(:,diodeStart:diodeStart+3) = [angle2dcm(-singleDiodeAng, 0, 0, 'XYZ')'*[0.0; 0.0; 1.0], ...
        angle2dcm(0, singleDiodeAng, 0, 'XYZ')'*centralVec, ...
        angle2dcm(singleDiodeAng, 0, 0, 'XYZ')'*centralVec, ...
        angle2dcm(0, -singleDiodeAng, 0, 'XYZ')'*centralVec];
    tmp_ssCent1Vec(:,diodeStart:diodeStart+3) = dcmB_SS(dcmStart:dcmStart+2,:)'*tmp_ssCent1Vec(:,diodeStart:diodeStart+3);
end  
                
% Sun vector for diode pairs
% elem = 1;
% offset = 0;
% mult = 1;
% pairings = [1,2; 1,3; 1,4; 2,3];
% tmp_ssCent2Vec = zeros(3,12);
% for module = 1:2
%     if (module == 2)
%         offset = 4;
%         mult = -1;
%     end
%     for first = 1:3
%         i = first + offset;
%         %i = pairings(pair,1) + offset;
%         %j = pairings(pair,2) + offset;
%         for second = first+1:4
%             j = second + offset;
%             itojVec = diodeBoresight(:,j) - diodeBoresight(:,i);
%             u_itoj = (diodeBoresight(:,i) + itojVec/2.0) / norm(diodeBoresight(:,i) + itojVec/2.0);
%             crossProd = cross(mult*centralVec,u_itoj);
%             crossProdNorm = norm(crossProd);
%             if (abs(crossProdNorm) < 1e-6) % axis co-aligned with central normal vector
%                 tmp_ssCent2Vec(:,elem) = mult*centralVec;
%                 elem = elem + 1;
%                 continue;
%             end
% 
%             eigAxis = crossProd / crossProdNorm;
%             %eigAng = asin(crossProdNorm);
%             quatAngle = twoDiodeAng/2.0;
%             dcm = quat_to_dcm([sin(quatAngle)*eigAxis; cos(quatAngle)]);
%             tmp_ssCent2Vec(:,elem) = dcm'*(mult*centralVec);
%             elem = elem + 1;
%        end
%     end
% end
elem = 1;
offset = 0;
mult = 1;
pairings = [1,2; 1,3; 1,4; 2,3];
tmp_ssCent2Vec = zeros(3,18);
for module = 1:3
    dcmStart = (module-1)*3 + 1;
    sensorCentVec = dcmB_SS(dcmStart:dcmStart+2,:)' * centralVec;
    offset = (module-1)*4;

    for first = 1:3
        i = first + offset;
        %i = pairings(pair,1) + offset;
        %j = pairings(pair,2) + offset;
        for second = first+1:4
            j = second + offset;
            itojVec = diodeBoresight(:,j) - diodeBoresight(:,i);
            u_itoj = (diodeBoresight(:,i) + itojVec/2.0) / norm(diodeBoresight(:,i) + itojVec/2.0);
            crossProd = cross(sensorCentVec,u_itoj);
            crossProdNorm = norm(crossProd);
            if (abs(crossProdNorm) < 1e-6) % axis co-aligned with central normal vector
                tmp_ssCent2Vec(:,elem) = sensorCentVec;
                elem = elem + 1;
                continue;
            end

            eigAxis = crossProd / crossProdNorm;
            %eigAng = asin(crossProdNorm);
            quatAngle = twoDiodeAng/2.0;
            dcm = quat_to_dcm([sin(quatAngle)*eigAxis; cos(quatAngle)]);
            tmp_ssCent2Vec(:,elem) = dcm'*(sensorCentVec);
            elem = elem + 1;
       end
    end
end

% % Central vectors for diode pairs
% mod1_1To2Vec = cross(tmp_ssCent1Vec(:,1), tmp_ssCent1Vec(:,2));
% mod1_1To2Ang = asin(norm(mod1_1To2Vec))/2;
% mod1_1To2Vec = mod1_1To2Vec/norm(mod1_1To2Vec);
% mod1_1To3Vec = cross(tmp_ssCent1Vec(:,1), tmp_ssCent1Vec(:,3));
% mod1_1To3Ang = asin(norm(mod1_1To3Vec))/2;
% mod1_1To3Vec = mod1_1To3Vec/norm(mod1_1To3Vec);
% mod1_1To4Vec = cross(tmp_ssCent1Vec(:,1), tmp_ssCent1Vec(:,4));
% mod1_1To4Ang = asin(norm(mod1_1To4Vec))/2;
% mod1_1To4Vec = mod1_1To4Vec/norm(mod1_1To4Vec);
% mod1_2To3Vec = cross(tmp_ssCent1Vec(:,2), tmp_ssCent1Vec(:,3));
% mod1_2To3Ang = asin(norm(mod1_2To3Vec))/2;
% mod1_2To3Vec = mod1_2To3Vec/norm(mod1_2To3Vec);
% mod1_2To4Vec = cross(tmp_ssCent1Vec(:,2), tmp_ssCent1Vec(:,4));
% mod1_2To4Ang = asin(norm(mod1_2To4Vec))/2;
% mod1_2To4Vec = mod1_2To4Vec/norm(mod1_2To4Vec);
% mod1_3To4Vec = cross(tmp_ssCent1Vec(:,3), tmp_ssCent1Vec(:,4));
% mod1_3To4Ang = asin(norm(mod1_3To4Vec))/2;
% mod1_3To4Vec = mod1_3To4Vec/norm(mod1_3To4Vec);
% mod2_1To2Vec = cross(tmp_ssCent1Vec(:,5), tmp_ssCent1Vec(:,6));
% mod2_1To2Ang = asin(norm(mod2_1To2Vec))/2;
% mod2_1To2Vec = mod2_1To2Vec/norm(mod1_1To2Vec);
% mod2_1To3Vec = cross(tmp_ssCent1Vec(:,5), tmp_ssCent1Vec(:,7));
% mod2_1To3Ang = asin(norm(mod2_1To3Vec))/2;
% mod2_1To3Vec = mod2_1To3Vec/norm(mod2_1To3Vec);
% mod2_1To4Vec = cross(tmp_ssCent1Vec(:,5), tmp_ssCent1Vec(:,8));
% mod2_1To4Ang = asin(norm(mod2_1To4Vec))/2;
% mod2_1To4Vec = mod2_1To4Vec/norm(mod2_1To4Vec);
% mod2_2To3Vec = cross(tmp_ssCent1Vec(:,6), tmp_ssCent1Vec(:,7));
% mod2_2To3Ang = asin(norm(mod2_2To3Vec))/2;
% mod2_2To3Vec = mod2_2To3Vec/norm(mod2_2To3Vec);
% mod2_2To4Vec = cross(tmp_ssCent1Vec(:,6), tmp_ssCent1Vec(:,8));
% mod2_2To4Ang = asin(norm(mod2_2To4Vec))/2;
% mod2_2To4Vec = mod2_2To4Vec/norm(mod2_2To4Vec);
% mod2_3To4Vec = cross(tmp_ssCent1Vec(:,7), tmp_ssCent1Vec(:,8));
% mod2_3To4Ang = asin(norm(mod2_3To4Vec))/2;
% mod2_3To4Vec = mod2_3To4Vec/norm(mod2_3To4Vec);
% tmp_ssCent2Vec = [cos(mod1_1To2Ang)*tmp_ssCent1Vec(:,1) + sin(mod1_1To2Ang)*(cross(mod1_1To2Vec,tmp_ssCent1Vec(:,1))) + (1-cos(mod1_1To2Ang))*dot(mod1_1To2Vec,tmp_ssCent1Vec(:,1))*mod1_1To2Vec, ...
%                   cos(mod1_1To3Ang)*tmp_ssCent1Vec(:,1) + sin(mod1_1To3Ang)*(cross(mod1_1To3Vec,tmp_ssCent1Vec(:,1))) + (1-cos(mod1_1To3Ang))*dot(mod1_1To3Vec,tmp_ssCent1Vec(:,1))*mod1_1To3Vec, ...
%                   cos(mod1_1To4Ang)*tmp_ssCent1Vec(:,1) + sin(mod1_1To4Ang)*(cross(mod1_1To4Vec,tmp_ssCent1Vec(:,1))) + (1-cos(mod1_1To4Ang))*dot(mod1_1To4Vec,tmp_ssCent1Vec(:,1))*mod1_1To4Vec, ...
%                   cos(mod1_2To3Ang)*tmp_ssCent1Vec(:,2) + sin(mod1_2To3Ang)*(cross(mod1_2To3Vec,tmp_ssCent1Vec(:,2))) + (1-cos(mod1_2To3Ang))*dot(mod1_2To3Vec,tmp_ssCent1Vec(:,2))*mod1_2To3Vec, ...
%                   cos(mod1_2To4Ang)*tmp_ssCent1Vec(:,2) + sin(mod1_2To4Ang)*(cross(mod1_2To4Vec,tmp_ssCent1Vec(:,2))) + (1-cos(mod1_2To4Ang))*dot(mod1_2To4Vec,tmp_ssCent1Vec(:,2))*mod1_2To4Vec, ...
%                   cos(mod1_3To4Ang)*tmp_ssCent1Vec(:,3) + sin(mod1_3To4Ang)*(cross(mod1_3To4Vec,tmp_ssCent1Vec(:,3))) + (1-cos(mod1_3To4Ang))*dot(mod1_3To4Vec,tmp_ssCent1Vec(:,3))*mod1_3To4Vec, ...
%                   cos(mod2_1To2Ang)*tmp_ssCent1Vec(:,5) + sin(mod2_1To2Ang)*(cross(mod2_1To2Vec,tmp_ssCent1Vec(:,5))) + (1-cos(mod2_1To2Ang))*dot(mod2_1To2Vec,tmp_ssCent1Vec(:,5))*mod2_1To2Vec, ...
%                   cos(mod2_1To3Ang)*tmp_ssCent1Vec(:,5) + sin(mod2_1To3Ang)*(cross(mod2_1To3Vec,tmp_ssCent1Vec(:,5))) + (1-cos(mod2_1To3Ang))*dot(mod2_1To3Vec,tmp_ssCent1Vec(:,5))*mod2_1To3Vec, ...
%                   cos(mod2_1To4Ang)*tmp_ssCent1Vec(:,5) + sin(mod2_1To4Ang)*(cross(mod2_1To4Vec,tmp_ssCent1Vec(:,5))) + (1-cos(mod2_1To4Ang))*dot(mod2_1To4Vec,tmp_ssCent1Vec(:,5))*mod2_1To4Vec, ...
%                   cos(mod2_2To3Ang)*tmp_ssCent1Vec(:,6) + sin(mod2_2To3Ang)*(cross(mod2_2To3Vec,tmp_ssCent1Vec(:,6))) + (1-cos(mod2_2To3Ang))*dot(mod2_2To3Vec,tmp_ssCent1Vec(:,6))*mod2_2To3Vec, ...
%                   cos(mod2_2To4Ang)*tmp_ssCent1Vec(:,6) + sin(mod2_2To4Ang)*(cross(mod2_2To4Vec,tmp_ssCent1Vec(:,6))) + (1-cos(mod2_2To4Ang))*dot(mod2_2To4Vec,tmp_ssCent1Vec(:,6))*mod2_2To4Vec, ...
%                   cos(mod2_3To4Ang)*tmp_ssCent1Vec(:,7) + sin(mod2_3To4Ang)*(cross(mod2_3To4Vec,tmp_ssCent1Vec(:,7))) + (1-cos(mod2_3To4Ang))*dot(mod2_3To4Vec,tmp_ssCent1Vec(:,7))*mod2_3To4Vec ...
%                   ];
% Sun sensor count bounds
tmp_ssCountsMin = 1250;
tmp_ssCountsMax = 2047;

% temporary mag structure
% magnetic field model parameters
tmp_mag.order = 10;

% temporary value for magnetic model
tmp_mag.gh(1:275) =  [-29496.5,-1585.9, 4945.1,-2396.6, 3026.0,-2707.7, 1668.6,  ...
    -575.4, 1339.7,-2326.3, -160.5, 1231.7,  251.7,  634.2,  ...
    -536.8,  912.6,  809.0,  286.4,  166.6, -211.2, -357.1,  ...
    164.4,   89.7, -309.2, -231.1,  357.2,   44.7,  200.3,  ...
    188.9, -141.2, -118.1, -163.1,    0.1,   -7.7,  100.9,  ...
    72.8,   68.6,  -20.8,   76.0,   44.2, -141.4,   61.5,  ...
    -22.9,  -66.3,   13.1,    3.1,  -77.9,   54.9,   80.4,  ...
    -75.0,  -57.8,   -4.7,  -21.2,   45.3,    6.6,   14.0,  ...
    24.9,   10.4,    7.0,    1.6,  -27.7,    4.9,   -3.4,  ...
    24.3,    8.2,   10.9,  -14.5,  -20.0,   -5.7,   11.9,  ...
    -19.3,  -17.4,   11.6,   16.7,   10.9,    7.1,  -14.1,  ...
    -10.8,   -3.7,    1.7,    5.4,    9.4,  -20.5,    3.4,  ...
    11.6,   -5.3,   12.8,    3.1,   -7.2,  -12.4,   -7.4,  ...
    -0.8,    8.0,    8.4,    2.2,   -8.4,   -6.1,  -10.1,  ...
    7.0,   -2.0,   -6.3,    2.8,    0.9,   -0.1,   -1.1,  ...
    4.7,   -0.2,    4.4,    2.5,   -7.2,   -0.3,   -1.0,  ...
    2.2,   -4.0,    3.1,   -2.0,   -1.0,   -2.0,   -2.8,  ...
    -8.3,    3.0,   -1.5,    0.1,   -2.1,    1.7,    1.6,  ...
    -0.6,   -0.5,   -1.8,    0.5,    0.9,   -0.8,   -0.4,  ...
    0.4,   -2.5,    1.8,   -1.3,    0.2,   -2.1,    0.8,  ...
    -1.9,    3.8,   -1.8,   -2.1,   -0.2,   -0.8,    0.3,  ...
    0.3,    1.0,    2.2,   -0.7,   -2.5,    0.9,    0.5,  ...
    -0.1,    0.6,    0.5,    0.0,   -0.4,    0.1,   -0.4,  ...
    0.3,    0.2,   -0.9,   -0.8,   -0.2,    0.0,    0.8,  ...
    -0.2,   -0.9,   -0.8,    0.3,    0.3,    0.4,    1.7,  ...
    -0.4,   -0.6,    1.1,   -1.2,   -0.3,   -0.1,    0.8,  ...
    0.5,   -0.2,    0.1,    0.4,    0.5,    0.0,    0.4,  ...
    0.4,   -0.2,   -0.3,   -0.5,   -0.3,   -0.8, ... % kp
    11.4,   16.7,  -28.8,  -11.3,   -3.9,  -23.0,    2.7,  ...
    -12.9,    1.3,   -3.9,    8.6,   -2.9,   -2.9,   -8.1,  ...
    -2.1,   -1.4,    2.0,    0.4,   -8.9,    3.2,    4.4,  ...
    3.6,   -2.3,   -0.8,   -0.5,    0.5,    0.5,   -1.5,  ...
    1.5,   -0.7,    0.9,    1.3,    3.7,    1.4,   -0.6,  ...
    -0.3,   -0.3,   -0.1,   -0.3,   -2.1,    1.9,   -0.4,  ...
    -1.6,   -0.5,   -0.2,    0.8,    1.8,    0.5,    0.2,  ...
    -0.1,    0.6,   -0.6,    0.3,    1.4,   -0.2,    0.3,  ...
    -0.1,    0.1,   -0.8,   -0.8,   -0.3,    0.4,    0.2,  ...
    -0.1,    0.1,    0.0,   -0.5,    0.2,    0.3,    0.5,  ...
    -0.3,    0.4,    0.3,    0.1,    0.2,   -0.1,   -0.5,  ...
    0.4,    0.2,    0.4];

% temporary eph structure
tmp_eph.jd2010 = 2455196.5;
tmp_eph.qJ2000toJ2010 = [-0.002359653880262, 3.854758015679488e-004, -8.808904577645489e-004, 0.999996753731718]';

env = Simulink.Parameter;

env.Value = struct( 'eph',  tmp_eph,...
                    'mag',  tmp_mag,...
                    'dcmIMU_B', tmp_dcmIMU_B,...
                    'dcmMAG_B', tmp_dcmMAG_B,...
                    'dcmSS_B', tmp_dcmSS_B,...
                    'qSTRK_B', tmp_qSTRK_B,...
                    'ssDiodeNorm', diodeBoresight,...
                    'ssCent1Vec', tmp_ssCent1Vec,...
                    'ssCent2Vec', tmp_ssCent2Vec,...
                    'ssCountsMin', tmp_ssCountsMin,...
                    'ssCountsMax', tmp_ssCountsMax);
                
env.CoderInfo.StorageClass = 'ImportedExtern';
env.DataType = 'Bus: struct_init_env';